* 3.0.0
- Major version bump because Gauge.Timer class public API changed (and it is no longer an inner class).
- Gauge.Timer was made more general-purpose and also applies to Histogram and Summary.
- metric.NewTimer() for easy one-line timer creation
- IObserver abstraction to represent "either Summary or Histogram"
* 2.1.3
- Fixed wrong case used for metric type in the export data format. Should always be lowercase. #96
* 2.1.2
- Fixed potential conflict when using pushgateway and also other exporter libraries (see #89)
* 2.1.1
- Various minor fixes (see issues on GitHub for details).
* 2.1.0
- Add MetricOptions and subclasses for more extensible API (old API surface remains available)
- Add SuppressInitialValue to metric configuration (ref https://www.robustperception.io/existential-issues-with-metrics/)
- Add .WithLabels() as alternative to .Labels() for fewer annoying Intellisense conflicts.
* 2.0.0
- Targeting .NET Standard 2.0 as minimum version (.NET Framework 4.6.1, .NET Core 2.0 and Mono 5.4)
- Added ASP.NET Core middlware
- Added possibility to signal a failed scrape from on-demand collectors
- Removed dependency on Reactive Extensions
- Minor breaking changes to API
- Performance improvements for hot-path code
- Removed mostly obsolete PerfCounterCollector class
- Fixed NuGet package contents to remove assemblies from dependencies
- Various minor fixes (see issues on GitHub for details)
* 1.3.4
- Added support for .NET 4.5 using System.Reactive 3.1.1.
- .NET 4.0 support continues to target Rx 2.5
* 1.2.4:
- Fixed MetricPusher not flushing metrics when stopped
* 1.2.3:
- Fixed label values escaping for ASCII formatter
* 1.2.2:
- PushGateway support
- Various internal improvements (replaced locks with Interlocked operations)    
* 1.1.4:
- Fixed some metrics not updating, added process ID metric
- Replaced lock statements in Counter and Gauge with CAS
* 1.1.3:
- optionally use https in MetricServer
* 1.1.2:
- using UTF-8 in text formatter
- catching exceptions in MetricServer http loop
* 1.1.1:
- disposing of MetricServer loop on Stop()
* 1.1.0:
- Renamed some metric names to be in-line with prometheus guidelines (breaking change as far as the exported metrics are concerned)
* 1.0.0:
- Add CPU, num handles, start time, num threads metrics to dot net stats collector
- Made DotNetStatsCollector default (previously it was PerfCounterCollector)
* 0.0.11:
- Summary metric ported from go
* 0.0.10:
- Fix header writing order
* 0.0.9:
- Generalise scraping so it can be called externally without using the embedded http handler
* 0.0.8:
- Introduced interfaces for all the metrics to make unlabelled collectors and their children polymorph
* 0.0.7:
- Added the notion of OnDemandCollectors + a DotNetStatsCollector to avoid having to use .net perf counters
* 0.0.6:
- Do not create unlabelled metric if label names are specified
* 0.0.5:
- Allow specifying hostname in URL
- Fix null ref exception if 'Accept' header is not specified
* 0.0.3 - initial version